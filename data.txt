import { createSlice } from '@reduxjs/toolkit'
export const counterSlice = createSlice({
    name: 'counter',
    initialState: {
        counter: 10
    },
    reducers: {
        increment: (state) => {
            state.counter += 1
        },
        decrement: (state) => {
            state.counter -= 1
        }
    }

})
export const {increment,decrement}= counterSlice.actions
export default counterSlice.reducer

----



import { configureStore } from '@reduxjs/toolkit'
import counterReducer from './reducers/counterSlice'

export default configureStore({
    reducer:{
        appCounter: counterReducer
    }
})

------

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import {Provider} from 'react-redux'
import store from './redux/store';
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <Provider store={store}>
    <App />
  </Provider>
);

 
reportWebVitals();
---



import React from 'react';
import { useDispatch, useSelector } from 'react-redux'
function CounterState(props) {
    const appCount= useSelector(state => state.appCounter.counter)
    return (
        <div>
               <p>The count is : {appCount}</p>
        </div>
    );
}

export default CounterState;


---




import React from 'react';
import { useDispatch } from 'react-redux'
import { increment } from '../../redux/reducers/counterSlice';
 function CounterAction(props) {
    const dispatch= useDispatch()
    return (
        <div>
    <button onClick={()=> dispatch(increment())}>INC</button>
        </div>
    );
}

export default CounterAction;

---




import React from 'react';
import CounterState from './CounterState';
import CounterAction from './CounterAction';
function CounterApp(props) {
return (
    <div className="App">
      <CounterState />
      <hr />
      <CounterAction />
    </div>
  );
}

export default CounterApp;
