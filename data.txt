import {  render, screen,fireEvent } from "@testing-library/react";
import Login, { validateEmail } from "./Login";
import userEvent from '@testing-library/user-event'

describe("Test the Login Component", () => {
    test("render the login form submit button on the screen", async () => {
      render(<Login />);
      const buttonList = await screen.findAllByRole("button");
      expect(buttonList).toHaveLength(2);
    });
  
    test("should be failed on email validation ", () => {
      const testEmail = "amar@mail.com";
      expect(validateEmail(testEmail)).toBe(true);
    });
  
    test("email input field should accept email ", () => {
      render(<Login />);
      const email = screen.getByPlaceholderText("Enter email");
      userEvent.type(email, "amar@mail.com");
      expect(email.value).toMatch("amar@mail.com");
    })
  test("should display alert if Error", async() => {
        render(<Login />);
        const email = screen.getByPlaceholderText("Enter email");
        const password = screen.getByPlaceholderText("Password");
        const buttonList = await screen.findAllByRole("button");
         userEvent.type(email, "amar");
        userEvent.type(password, "123456");
        userEvent.click(buttonList[0])
        const error= screen.getByText("Email is not valid")
        expect(error).toBeInTheDocument();
      });
})
